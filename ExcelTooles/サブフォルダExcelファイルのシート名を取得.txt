'メイン処理
Sub Main()
    'セールクリア
    Range("A3:D50000").Clear
    
    'フォルダ選択
    Dim TargetRange As Range '入力対象のアクティブセル格納用
    Set TargetRange = ActiveCell 'アクティブセルを変数に格納
    Dim TargetFldName As String '選択したフォルダパス格納用

    'ダイアフォルダグ表示
    Application.FileDialog(msoFileDialogFolderPicker).Title = "パスを入力したいフォルダを選んでね" 'ダイアログタイトル
    If Application.FileDialog(msoFileDialogFolderPicker).Show = True Then 'フォルダを選んでダイアログOK押下
       TargetFldName = Application.FileDialog(msoFileDialogFolderPicker).SelectedItems(1) '選択したフォルダのパスを格納
       '選択されたフォルダのパスをB1に書き込む
       Range("B1").Value = TargetFldName
       'TargetRange.Value = TargetFldName 'アクティブセルにフォルダパスを入力
    End If
    ProcessAllSubfolders TargetFldName
End Sub

Sub ProcessAllSubfolders(ByVal parentFolder As String)

    Dim fs As Object
    Dim folder As Object
    Dim subFolder As Object
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set folder = fs.GetFolder(parentFolder)
    
    Dim tmp As Variant
    tmp = Split(folder, "\")
    'フォルダがbkの場合、スキップ
    If tmp(UBound(tmp)) = "bk" Then
        GoTo NEXT_TASK
    End If
    
    ' 親フォルダ内のファイルに対する処理をここに追加します
    Dim fileName    As String
    Dim IsBookOpen  As Boolean
    Dim OpenBook    As Workbook
    
    'ファイルの拡張子がxlsxのみは対象
    fileName = Dir(folder + "/*.xlsx")
    
    Do While fileName <> ""
        
        If fileName <> ThisWorkbook.Name Then
            'C列データ個数取得
            Dim bColCnt As Long
            cColCnt = WorksheetFunction.CountIf(Range("C:C"), "<>")
            'D列最後データの数値をプラス１
            dColCnt_1 = Cells(Rows.Count, "D").End(xlUp).Row + 1
            'A列にNoを書き込む
            Range("A" & dColCnt_1).Value = cColCnt
        
            IsBookOpen = False
            
            For Each OpenBook In Workbooks
                        
                If OpenBook.Name = fileName Then
                
                    IsBookOpen = True
                    
                    Exit For
                    
                End If
                
            Next
            
            If IsBookOpen = False Then
                'ファイルシートの配列を取得
                Dim Testarray() As String
                Testarray = fncMakeArray(folder, fileName)
                'D列最後データの数値をプラス１
                dColCnt_2 = Cells(Rows.Count, "D").End(xlUp).Row + 1
                'B列にディレクトリーを書き込む
                Range("B" & dColCnt_2).Value = folder
                'C列にファイル名を書き込む
                Range("C" & dColCnt_2).Value = fileName
                'D列にシート名を書き込む
                Dim i As Integer
                For i = LBound(Testarray) To UBound(Testarray)
                    dColCnt_3 = Cells(Rows.Count, "D").End(xlUp).Row + 1
                    If Testarray(i) <> "" Or Testarray(i) <> "改訂履歴" Or Testarray(i) <> "ヘッダ" Then
                        Range("D" & dColCnt_3).Value = Testarray(i)
                    End If
                Next i
                                                   
            End If
            
        End If
        
        fileName = Dir()
        
    Loop
    
NEXT_TASK:
    For Each subFolder In folder.SubFolders
        ' サブフォルダ内のファイルに対する処理をここに追加します
        ProcessAllSubfolders subFolder.Path
    Next subFolder
    
End Sub

'ファイルのシート名を配列として戻す
Function fncMakeArray(ByVal folder As Object, ByVal fileName As String) As String()
    Dim xlApp As Excel.Application
    Dim xlBook As Excel.Workbook

    '---------------------
    ' EXCELファイルを開く
    '---------------------
    Dim strFilename As String                             'ファイル名(フルパス)
    strFilename = folder + "/" + fileName                  'ファイル名をセット



    Set xlApp = CreateObject("Excel.Application")         'Application生成
    xlApp.Workbooks.Open fileName:=strFilename, UpdateLinks:=0 'EXCELを開く
    xlApp.Visible = False                                       'EXCELの表示

    Set xlBook = xlApp.Workbooks(fileName)        'Workbook

    '--------------
    ' シート名の取得
    '--------------
    Dim i As Integer

    '配列を宣言
    Dim arr(100) As String

    For i = 0 To xlBook.Worksheets.Count - 1
        arr(i) = xlBook.Worksheets(i + 1).Name
    Next i

    '-----------------------
    ' EXCELファイル終了処理
    '-----------------------
    xlBook.Close saveChanges:=True                       'ブックを保存して終了
    xlApp.Quit                                           'EXCELを閉じる

    Set xlBook = Nothing                                 'オブジェクトの解放
    Set xlApp = Nothing                                  'オブジェクトの解放

    fncMakeArray = arr()
    
End Function
